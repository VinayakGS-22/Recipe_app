{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","cusineType","ingredients","source","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","placeholder","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6PAkBeA,EAfA,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,MAAMC,EAAiD,EAAjDA,SAASC,EAAwC,EAAxCA,MAAMC,EAAkC,EAAlCA,WAAWC,EAAuB,EAAvBA,YAAYC,EAAW,EAAXA,OACzD,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKR,IACL,4CAAeC,KACf,4BAAIE,IACJ,6BAAKC,EAAYK,KAAI,SAAAC,GAAU,OAC3B,6BAAKA,EAAWC,YAEpB,yCAAYN,KACZ,qBAAKC,UAAWC,IAAML,MAAMU,IAAKV,EAAOW,IAAI,4BCkDzCC,G,MA3DH,WACV,IADe,EAGaC,mBAAS,IAHtB,mBAGRC,EAHQ,KAGAC,EAHA,OAIYF,mBAAS,IAJrB,mBAIRG,EAJQ,KAIDC,EAJC,OAKUJ,mBAAS,WALnB,mBAKRK,EALQ,KAKFC,EALE,KAOfC,qBAAU,WACRC,MAIA,CAACH,IAEH,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAdf,WAce,oBAbd,qCAYG,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,EAAKC,MAJA,2CAAH,qDAoBhB,OACE,sBAAKvB,UAAU,MAAf,UACE,uBAAM0B,SARQ,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKmBb,UAAU,cAArC,UACE,uBAAO6B,YAAY,iCAAiC7B,UAAU,aAAa8B,KAAK,OAAOC,MAAOnB,EAAQoB,SAdvF,SAAAL,GACnBd,EAAUc,EAAEM,OAAOF,UAcf,wBAAS/B,UAAU,gBAAgB8B,KAAK,SAAxC,uBAKF,sBAAK9B,UAAU,UAAf,UACCU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEAR,MAAOQ,EAAOA,OAAOgC,MACrBvC,SAAUO,EAAOA,OAAOP,SACxBC,MAAOM,EAAOA,OAAON,MACrBG,OAAQG,EAAOA,OAAOH,OACtBF,WAAYK,EAAOA,OAAOL,WAAYC,YAAaI,EAAOA,OAAOJ,aAL5DI,EAAOA,OAAOgC,UAHrB,YCnCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.c3a3aa25.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from'./recipe.module.css'\r\n\r\nconst Recipe = ({title,calories,image,cusineType,ingredients,source}) =>{\r\n    return (\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <p>Calories = {calories}</p>\r\n            <p>{cusineType}</p>\r\n            <ol>{ingredients.map(ingredient =>(\r\n                <li>{ingredient.text}</li>\r\n            ))}</ol>\r\n            <p>Source:-{source}</p>\r\n            <img className={style.image}src={image} alt=\"Image Not Available\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe;","import React,{useEffect,useState} from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () =>{\n  const APP_ID = \"21a2de3f\";\n  const APP_KEY = \"e55ff951c9d61bbfd793d21012ea9730\";\n  const [recipes,setRecipes] =useState([]);\n  const [search,setSearch] = useState('');\n  const [query,setQuery] = useState('chicken')\n\n  useEffect(() =>{\n    getRecipes();\n\n    \n    \n  },[query])\n\n  const getRecipes = async ()=>{\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n   \n\n  }\n\n  const updateSearch = e =>{\n    setSearch(e.target.value);\n    \n  }\n\n  const getSearch = e =>{\n    e.preventDefault();\n    setQuery(search)\n    setSearch('')\n  }\n\n  return(\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input placeholder=\"search for your favourite food\" className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\n        <button  className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n      \n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe => (\n        <Recipe \n        key={recipe.recipe.label}\n        title={recipe.recipe.label} \n        calories={recipe.recipe.calories}\n        image={recipe.recipe.image} \n        source={recipe.recipe.source}\n        cusineType={recipe.recipe.cusineType} ingredients={recipe.recipe.ingredients} \n        />\n      \n      ))};\n      </div>\n    </div>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__wiPD3\",\"image\":\"recipe_image__1HlrA\"};"],"sourceRoot":""}